# Build the application from source
FROM golang:1.23 AS build-stage

# Set the working directory to the root of the image
WORKDIR /

# Copy go.mod and go.sum to ensure dependencies are downloaded correctly
COPY go.mod go.sum ./
RUN go mod download

# Copy the entire src directory (including main.go) into the container
COPY ./src ./src

# Copy the config directory (including environment.yaml) into the container
COPY ./src/config ./src/config

# Set the working directory to the src directory where the Go files are
WORKDIR /src

# Build the Go application
RUN CGO_ENABLED=0 GOOS=linux go build -o /webapp

# Deploy the application binary into a lean image
FROM gcr.io/distroless/base-debian11 AS build-release-stage

# Set the working directory to root ("/")
WORKDIR /

# Copy the built application binary from the build-stage into the root directory
COPY --from=build-stage /webapp /webapp

# Copy the config files from build stage (if needed in the root)
COPY --from=build-stage /src/config /src/config

# Expose port 3000 for the application
EXPOSE 3000

# Run as a non-root user for security (adjust if nonroot user is not available in your base image)
USER nonroot:nonroot

# Set the entry point to the application binary located in root
ENTRYPOINT ["/webapp"]
